#!/usr/bin/env python
# coding=utf-8
b = [23,45,22,44,25,66,78]
#1.生成所有奇数组成的列表
t1 = [i for i in b if i % 2 == 1]
print(t1)
# t1=[23, 45, 25]
#分解式子
b1 = []
for i in b:
    if i % 2 == 1:
        b1.append(i)
print(b1)
#2.输出结果 ['the content 23','the content 45']
list2 = [i for i in b if i % 2 == 1]
list2.remove(25)
['the content %d' % i for i in list2 ]
#3.a = [1,2,3,4,5,6,7],输出结果包含元祖的列表
a = [1,2,3,4,5,6,7]
[(i,j) for i in b for j in a]
#分解式子
t1 = []
for i in b:
    for j in a:
       t1.append((i,j))

print(t1)

#4 字典的推导式
dict1 = {(i,j) for i in a for j in b}
'''
{(1, 22),
 (1, 23),
 (1, 25),
 (1, 44),
 (1, 45),
 (1, 66),
 (1, 78),
 (2, 22),
 (2, 23),
 (2, 25),
 (2, 44),
 (2, 45),
 (2, 66),
 (2, 78),
 (3, 22),
 (3, 23),
 (3, 25),
 (3, 44),
 (3, 45),
 (3, 66),
 (3, 78),
 (4, 22),
 (4, 23),
 (4, 25),
 (4, 44),
 (4, 45),
 (4, 66),
 (4, 78),
 (5, 22),
 (5, 23),
 (5, 25),
 (5, 44),
 (5, 45),
 (5, 66),
 (5, 78),
 (6, 22),
 (6, 23),
 (6, 25),
 (6, 44),
 (6, 45),
 (6, 66),
 (6, 78),
 (7, 22),
 (7, 23),
 (7, 25),
 (7, 44),
 (7, 45),
 (7, 66),
 (7, 78)}
'''
#因为 dict 可以直接作用与元祖进行创建

